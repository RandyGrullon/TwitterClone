   const [_id, set_id] = useState("");
   const [noteTitle, setNoteTitle] = useState("");
   const [noteDescription, setNoteDescription] = useState("");
    const [tasks, setTasks] = useState([]);

   const fetchTasks = async () => {
     try {
       const response = await fetch("/api/task");
       const data = await response.json();
       setTasks(data);
     } catch (error) {
       console.error(error);
     }
   };

   const handleAddTask = async (event) => {
     event.preventDefault();
     if (!_id) {
       try {
         const response = await fetch("/api/task", {
           method: "POST",
           body: JSON.stringify({
             title: noteTitle,
             description: noteDescription,
           }),
           headers: {
             Accept: "application/json",
             "Content-Type": "application/json",
           },
         });
         const data = await response.json();
         console.log(data);
         setNoteTitle("");
         setNoteDescription("");
         fetchTasks();
       } catch (error) {
         console.error(error);
       }
     } else {
       try {
         const response = await fetch(`/api/task/${_id}`, {
           method: "PUT",
           body: JSON.stringify({
             title: noteTitle,
             description: noteDescription,
           }),
           headers: {
             Accept: "application/json",
             "Content-Type": "application/json",
           },
         });
         const data = await response.json();
         console.log(data);
         setNoteTitle("");
         setNoteDescription("");
         set_id("");
         fetchTasks();
       } catch (error) {
         console.error(error);
       }
     }
   };

   const handleEditTask = async (id) => {
     try {
       const response = await fetch(`/api/task/${id}`);
       const data = await response.json();
       console.log(data);
       set_id(data._id);
       setNoteTitle(data.title);
       setNoteDescription(data.description);
     } catch (error) {
       console.error(error);
     }
   };

   const handleDeleteTask = async (id) => {
     if (window.confirm("Are you sure you want to delete it?")) {
       try {
         const response = await fetch(`/api/task/${id}`, {
           method: "DELETE",
           headers: {
             Accept: "application/json",
             "Content-Type": "application/json",
           },
         });
         const data = await response.json();
         console.log(data);
         fetchTasks();
       } catch (error) {
         console.error(error);
       }
     }
   };

   const handleInputChange = ({ target }) => {
     const { name, value } = target;
     if (name === "title") {
       setNoteTitle(value);
     } else if (name === "description") {
       setNoteDescription(value);
     }
   };

   useEffect(() => {
     fetchTasks();
   }, []);
















   caps
   <div className="bg-white py-16" key={user.id}>
          <div className="mx-auto grid max-w-7xl px-6">
            <ul
              role="list"
              className="grid gap-x-8 gap-y-12 sm:grid-cols-2 sm:gap-y-16 xl:col-span-2"
            >
              <li>
                <div className="flex items-center gap-x-6">
                  <Image
                    className="h-16 w-16 rounded-full"
                    src={profilePic}
                    alt=""
                  />
                  <div className="flex items-center gap-x-1 w-full justify-between">
                    <div className="flex items-center gap-x-1">
                      <h3 className="text-base font-semibold leading-7 tracking-tight text-gray-900">
                        {user.name}
                      </h3>
                      <p className="text-sm font-semibold leading-6 text-gray-500">
                        {user.user}
                      </p>
                    </div>
                    <div className="flex items-center gap-x-4">
                      <p className="text-sm font-semibold leading-6 text-gray-500">
                        {user.messageTime}
                      </p>
                      <div>
                        <ThreeDotsIcon width={20} height={20} color="#D9D9D9" />
                      </div>
                    </div>
                  </div>
                </div>
                    
              </li>
            </ul>
          </div>
        </div>